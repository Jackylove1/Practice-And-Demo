<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>简单轮播图</title>
	<style type="text/css" media="screen">
		*{padding:0;margin:0;}
		ul,ol{list-style: none;}
		img{vertical-align:top;}
		.all{width: 500px;height: 200px;border:1px solid #ccc;padding:7px;margin:100px auto;position: relative;}
		.screen{width: 500px;height: 200px;position: relative;overflow: hidden;}
		.screen li{width: 500px;height: 200px;float: left;}
		.screen ul{width:3000px;height: 200px;position: absolute;top:0;left:0;}
		.all ol{position: absolute;right:10px;bottom: 10px;line-height: 20px;text-align: center;}
		.all ol li{float: left;width: 20px;height: 20px;margin-right:10px;background-color: #fff;
			border: 1px solid #ccc;
			cursor: pointer;}
		.all ol li.current{ background:yellow;}
	</style>
</head>
<body>
<div class="all" id='all'>
	<div class="screen">
        <ul id="ul">
            <li><img src="images/01.jpg" width="500" height="200" /></li>
            <li><img src="images/02.jpg" width="500" height="200" /></li>
            <li><img src="images/03.jpg" width="500" height="200" /></li>
            <li><img src="images/04.jpg" width="500" height="200" /></li>
            <li><img src="images/05.jpg" width="500" height="200" /></li>
        </ul>
    </div>
</div>
</body>
</html>
<script type="text/javascript">
var box = document.getElementById('all'); 
var ul = document.getElementById('ul'); 
var ulLis = ul.children; //取得ul的子元素
//创建ol和li
var ol = document.createElement('ol');
box.appendChild(ol);//将ol插入到大盒子的最后
//通过图片的数量来确定小圆点的数量
//注意要先去除ol的默认样式,取得各个对应的数字
for (var i=0; i< ulLis.length; i++){
	var li = document.createElement('li');
		ol.appendChild(li);
		li.innerHTML = i + 1;
}
//将第一张设为active类型
ol.children[0].className = "current";
//因为要做无缝滚动所以要克隆第一张
ul.appendChild(ulLis[0].cloneNode(true));
//开始动画
var olLis = ol.children;
for(var i=0; i< olLis.length; i++){
	olLis[i].index = i;
	olLis.onmouseover = function(){
		for(j=0; j< olLis.length; j++){
			olLis[j].className = "";
		}
	this.className = "crrent";
         animate(ul,-this.index*500)
                 // 调用动画函数  第一个参数  谁动画     第二个  走多少
                 square = key = this.index;  // 当前的索引号为主
             }
         }
         //  4. 添加定时器
        var timer = null;   // 轮播图的定时器
        var key = 0;  //控制播放张数
        var square = 0; // 控制小方块
          timer = setInterval(autoplay,1000);  // 开始轮播图定时器
          function autoplay() {
              key++;  // 先 ++
              if(key>ulLis.length - 1)  // 后判断
              {
                  ul.style.left = 0;  // 迅速调回
                  key = 1;  // 因为第6张就是第一张  第6张播放 下次播放第2张
              }
              animate(ul,-key*500);  // 再执行
              // 小方块
              square++;
              if(square > olLis.length -1)
              {
                  square = 0;
              }
              for(var i=0;i<olLis.length;i++)   // 先清除所有的
              {
                  olLis[i].className = "";
              }
              olLis[square].className = "current";  // 留下当前的
          }
          //last最后  鼠标经过大盒子要停止定时器
         box.onmouseover = function() {
             clearInterval(timer);
         }
         box.onmouseout = function() {
             timer = setInterval(autoplay,1000);  // 开始轮播图定时器
         }
function animate(obj,target){
        clearInterval(obj.timer);  // 先清除定时器
        var speed = obj.offsetLeft < target ? 15 : -15;  // 用来判断 应该 +  还是 -
        obj.timer = setInterval(function() {
            var result = target - obj.offsetLeft; 
            obj.style.left = obj.offsetLeft + speed + "px";
            if(Math.abs(result)<=15)
            {
                clearInterval(obj.timer);
                obj.style.left = target + "px";  // 有5像素差距   我们直接跳转目标位置
            }
        },10)
    }
</script>